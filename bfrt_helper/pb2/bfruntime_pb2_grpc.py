# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bfrt_helper.pb2 import bfruntime_pb2 as bfrt__helper_dot_pb2_dot_bfruntime__pb2


class BfRuntimeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Write = channel.unary_unary(
            "/bfrt_proto.BfRuntime/Write",
            request_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.WriteRequest.SerializeToString,
            response_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.WriteResponse.FromString,
        )
        self.Read = channel.unary_stream(
            "/bfrt_proto.BfRuntime/Read",
            request_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.ReadRequest.SerializeToString,
            response_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.ReadResponse.FromString,
        )
        self.SetForwardingPipelineConfig = channel.unary_unary(
            "/bfrt_proto.BfRuntime/SetForwardingPipelineConfig",
            request_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.SetForwardingPipelineConfigRequest.SerializeToString,
            response_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.SetForwardingPipelineConfigResponse.FromString,
        )
        self.GetForwardingPipelineConfig = channel.unary_unary(
            "/bfrt_proto.BfRuntime/GetForwardingPipelineConfig",
            request_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.GetForwardingPipelineConfigRequest.SerializeToString,
            response_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.GetForwardingPipelineConfigResponse.FromString,
        )
        self.StreamChannel = channel.stream_stream(
            "/bfrt_proto.BfRuntime/StreamChannel",
            request_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.StreamMessageRequest.SerializeToString,
            response_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.StreamMessageResponse.FromString,
        )


class BfRuntimeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Write(self, request, context):
        """Update one or more P4 entities on the target."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Read(self, request, context):
        """Read one or more P4 entities from the target."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SetForwardingPipelineConfig(self, request, context):
        """Sets the P4 fowarding-pipeline config."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetForwardingPipelineConfig(self, request, context):
        """Gets the current P4 fowarding-pipeline config."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def StreamChannel(self, request_iterator, context):
        """Represents the bidirectional stream between the controller and the
        switch (initiated by the controller).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BfRuntimeServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Write": grpc.unary_unary_rpc_method_handler(
            servicer.Write,
            request_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.WriteRequest.FromString,
            response_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.WriteResponse.SerializeToString,
        ),
        "Read": grpc.unary_stream_rpc_method_handler(
            servicer.Read,
            request_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.ReadRequest.FromString,
            response_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.ReadResponse.SerializeToString,
        ),
        "SetForwardingPipelineConfig": grpc.unary_unary_rpc_method_handler(
            servicer.SetForwardingPipelineConfig,
            request_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.SetForwardingPipelineConfigRequest.FromString,
            response_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.SetForwardingPipelineConfigResponse.SerializeToString,
        ),
        "GetForwardingPipelineConfig": grpc.unary_unary_rpc_method_handler(
            servicer.GetForwardingPipelineConfig,
            request_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.GetForwardingPipelineConfigRequest.FromString,
            response_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.GetForwardingPipelineConfigResponse.SerializeToString,
        ),
        "StreamChannel": grpc.stream_stream_rpc_method_handler(
            servicer.StreamChannel,
            request_deserializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.StreamMessageRequest.FromString,
            response_serializer=bfrt__helper_dot_pb2_dot_bfruntime__pb2.StreamMessageResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "bfrt_proto.BfRuntime", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class BfRuntime(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Write(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/bfrt_proto.BfRuntime/Write",
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.WriteRequest.SerializeToString,
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.WriteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Read(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/bfrt_proto.BfRuntime/Read",
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.ReadRequest.SerializeToString,
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.ReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SetForwardingPipelineConfig(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/bfrt_proto.BfRuntime/SetForwardingPipelineConfig",
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.SetForwardingPipelineConfigRequest.SerializeToString,
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.SetForwardingPipelineConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetForwardingPipelineConfig(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/bfrt_proto.BfRuntime/GetForwardingPipelineConfig",
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.GetForwardingPipelineConfigRequest.SerializeToString,
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.GetForwardingPipelineConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def StreamChannel(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            "/bfrt_proto.BfRuntime/StreamChannel",
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.StreamMessageRequest.SerializeToString,
            bfrt__helper_dot_pb2_dot_bfruntime__pb2.StreamMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
